## *********************************************************
## 
## File autogenerated for the eddiebot_node package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 233, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 259, 'description': 'Polling rate for the parallax eddie.', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'update_rate', 'edit_method': '', 'default': 30.0, 'level': 0, 'min': 60.0, 'type': 'double'}, {'srcline': 259, 'description': 'The possible drive modes (twist, eddie, drive).', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'drive_mode', 'edit_method': "{'enum_description': '', 'enum': [{'srcline': 11, 'description': 'Takes a geometry_msgs/Twist message and is navigation compatible.', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const char * const', 'value': 'twist', 'ctype': 'std::string', 'type': 'str', 'name': 'twist'}, {'srcline': 12, 'description': 'Takes a eddiebot_node/Eddie message and is eddiesim compatible.', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const char * const', 'value': 'eddie', 'ctype': 'std::string', 'type': 'str', 'name': 'eddie'}, {'srcline': 13, 'description': 'Takes a eddiebot_node/Drive message which drives the EddieBot as described in the Parallax Eddie manual.', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const char * const', 'value': 'drive', 'ctype': 'std::string', 'type': 'str', 'name': 'drive'}]}", 'default': 'twist', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'How long to wait before timing out on a velocity command..', 'max': 0.5, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'cmd_vel_timeout', 'edit_method': '', 'default': 0.5, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'Stops motors when the bumps sensor is hit.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'stop_motors_on_bump', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 259, 'description': 'Enables or disables the gyro.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'has_gyro', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 259, 'description': 'Scaling factor for correct gyro operation.', 'max': 6.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'gyro_scale_correction', 'edit_method': '', 'default': 1.35, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'Measurement range supported by gyro.', 'max': 300.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'gyro_measurement_range', 'edit_method': "{'enum_description': 'Gyro Options', 'enum': [{'srcline': 25, 'description': 'ADXRS613 150deg/s', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const double', 'value': 150.0, 'ctype': 'double', 'type': 'double', 'name': 'ADXRS613'}, {'srcline': 26, 'description': 'ADXRS652 250deg/s', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const double', 'value': 250.0, 'ctype': 'double', 'type': 'double', 'name': 'ADXRS652'}, {'srcline': 27, 'description': 'ADXRS642 300deg/s', 'srcfile': '../cfg/EddieBot.cfg', 'cconsttype': 'const double', 'value': 300.0, 'ctype': 'double', 'type': 'double', 'name': 'ADXRS642'}]}", 'default': 150.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'A correction applied to the computation of the rotation in the odometry.', 'max': 3.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'odom_angular_scale_correction', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'A correction applied to the computation of the translation in odometry.', 'max': 3.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'odom_linear_scale_correction', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'Minimum angular velocity of the EddieBot.', 'max': 3.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'min_abs_yaw_vel', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'Maximum angular velocity of the EddieBot.', 'max': 3.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/groovy/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py', 'name': 'max_abs_yaw_vel', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0.0, 'type': 'double'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])    
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

EddieBot_twist = 'twist'
EddieBot_eddie = 'eddie'
EddieBot_drive = 'drive'
EddieBot_ADXRS613 = 150.0
EddieBot_ADXRS652 = 250.0
EddieBot_ADXRS642 = 300.0
