/* Auto-generated by genmsg_cpp for file /home/paralax2/fuerte_workspace/sandbox/eddiebot/eddiebot_node/srv/SetDigitalOutputs.srv */
#ifndef EDDIEBOT_NODE_SERVICE_SETDIGITALOUTPUTS_H
#define EDDIEBOT_NODE_SERVICE_SETDIGITALOUTPUTS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace eddiebot_node
{
template <class ContainerAllocator>
struct SetDigitalOutputsRequest_ {
  typedef SetDigitalOutputsRequest_<ContainerAllocator> Type;

  SetDigitalOutputsRequest_()
  : digital_out_0(0)
  , digital_out_1(0)
  , digital_out_2(0)
  {
  }

  SetDigitalOutputsRequest_(const ContainerAllocator& _alloc)
  : digital_out_0(0)
  , digital_out_1(0)
  , digital_out_2(0)
  {
  }

  typedef uint8_t _digital_out_0_type;
  uint8_t digital_out_0;

  typedef uint8_t _digital_out_1_type;
  uint8_t digital_out_1;

  typedef uint8_t _digital_out_2_type;
  uint8_t digital_out_2;


  typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetDigitalOutputsRequest
typedef  ::eddiebot_node::SetDigitalOutputsRequest_<std::allocator<void> > SetDigitalOutputsRequest;

typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsRequest> SetDigitalOutputsRequestPtr;
typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsRequest const> SetDigitalOutputsRequestConstPtr;


template <class ContainerAllocator>
struct SetDigitalOutputsResponse_ {
  typedef SetDigitalOutputsResponse_<ContainerAllocator> Type;

  SetDigitalOutputsResponse_()
  : done(false)
  {
  }

  SetDigitalOutputsResponse_(const ContainerAllocator& _alloc)
  : done(false)
  {
  }

  typedef uint8_t _done_type;
  uint8_t done;


  typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetDigitalOutputsResponse
typedef  ::eddiebot_node::SetDigitalOutputsResponse_<std::allocator<void> > SetDigitalOutputsResponse;

typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsResponse> SetDigitalOutputsResponsePtr;
typedef boost::shared_ptr< ::eddiebot_node::SetDigitalOutputsResponse const> SetDigitalOutputsResponseConstPtr;

struct SetDigitalOutputs
{

typedef SetDigitalOutputsRequest Request;
typedef SetDigitalOutputsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetDigitalOutputs
} // namespace eddiebot_node

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "95ef1ce60d04abfe27bea339a6261f29";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x95ef1ce60d04abfeULL;
  static const uint64_t static_value2 = 0x27bea339a6261f29ULL;
};

template<class ContainerAllocator>
struct DataType< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eddiebot_node/SetDigitalOutputsRequest";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 digital_out_0\n\
uint8 digital_out_1\n\
uint8 digital_out_2\n\
\n\
";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "89bb254424e4cffedbf494e7b0ddbfea";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x89bb254424e4cffeULL;
  static const uint64_t static_value2 = 0xdbf494e7b0ddbfeaULL;
};

template<class ContainerAllocator>
struct DataType< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eddiebot_node/SetDigitalOutputsResponse";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool done\n\
\n\
";
  }

  static const char* value(const  ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.digital_out_0);
    stream.next(m.digital_out_1);
    stream.next(m.digital_out_2);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetDigitalOutputsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.done);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetDigitalOutputsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<eddiebot_node::SetDigitalOutputs> {
  static const char* value() 
  {
    return "3e43640171aa67a865fe4990d6959f42";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputs&) { return value(); } 
};

template<>
struct DataType<eddiebot_node::SetDigitalOutputs> {
  static const char* value() 
  {
    return "eddiebot_node/SetDigitalOutputs";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputs&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3e43640171aa67a865fe4990d6959f42";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eddiebot_node/SetDigitalOutputs";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3e43640171aa67a865fe4990d6959f42";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eddiebot_node/SetDigitalOutputs";
  }

  static const char* value(const eddiebot_node::SetDigitalOutputsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // EDDIEBOT_NODE_SERVICE_SETDIGITALOUTPUTS_H

