<launch>
  <include file="$(find openni_launch)/launch/openni.launch"/>

  <arg name="camera"  value="camera"/>
  <arg name="respawn" default="false" />
  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />
  <arg name="manager" value="$(arg camera)_nodelet_manager" />

  <!-- Depth registration -->
  <arg name="depth_registration" default="true"/>
  <arg     if="$(arg depth_registration)" name="depth" value="depth_registered" />
  <arg unless="$(arg depth_registration)" name="depth" value="depth" />
  
  <!-- Processing Modules -->
  <arg name="scan_processing"    default="true"/>

  <group ns="$(arg camera)">
    <node pkg="nodelet" type="nodelet" name="$(arg manager)" respawn="true" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="openni_camera_loader" args="load openni_camera/driver $(arg manager)" respawn="true">
        <rosparam file="$(find eddiebot_bringup)/config/kinect.yaml" command="load"/>
        <param name="depth_registration" value="$(arg depth_registration)"/>
    </node>
    
    <!--                        Laserscan 
      This uses lazy subscribing, so will not activate until scan is requested.
    -->
    <group if="$(arg scan_processing)">
      <!-- <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet camera_nodelet_manager"> -->
      <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan_loader" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg manager)">
  	    <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
		 return the minimum value for those pixels centered vertically in the image. -->
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/$(arg camera)_depth_frame"/>
        <!-- <param name="output_frame_id" value="/scanner"/> -->
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/$(arg camera)/$(arg depth)/image_raw"/>
        <remap from="scan" to="/scan"/>
      </node>
    </group>
  </group>
</launch>
